{
  "entries": [
    {
      "id": "experiences",
      "label": "Work Experiences",
      "expanded": true,
      "children": [
        {
          "id": "visier",
          "label": "Visier Inc.",
          "title": "Software Development Coop",
          "expanded": true,
          "start": [
            2022,
            9
          ],
          "end": [
            2023,
            4
          ],
          "location": "Vancouver, BC (Hybrid)",
          "description": "./markdown/visier-description.md",
          "children": [
            {
              "id": "batchErrors",
              "label": "Catch and Handle Batch Job Errors",
              "description": "Batch jobs needed a configuration option to fail and stop processing when any of its children failed. I *designed* a few different solutions and *collaborated with cross-team stakeholders* to choose the best design, implement the design, and write *automated tests*. I demonstrated *flexibility* when we decided to switch to a different design after implementation.",
              "neighbours": [
                "crossteamCollaboration",
                "architectureAndDesign",
                "automatedTesting",
                "scala",
                "scalaTest",
                "flexibility"
              ]
            },
            {
              "id": "visierApis",
              "label": "Create a new set client-facing RESTful API endpoints",
              "description": "I deployed new endpoints that added new features and formatting to existing endpoints. I worked with *Protobuf* definitions (and even wrote a custom converter from Protobuf Java objects to Scala objects to support a more OpenAPI-like message format), *user authentication*, *technical documentation*, and collaboration with my *product manager*. After I completed my work, I guided less experienced coops as they built on top of the code I wrote. I also provided *code review* with meaningful feedback for their work.",
              "neighbours": [
                "restfulApis",
                "protobuf",
                "http",
                "codeReview",
                "leadership",
                "communication",
                "scala",
                "network-protocols"
              ]
            },
            {
              "id": "exemplar",
              "label": "Write an Examle and Test Enablement Application",
              "description": "I created a public repo of a locally-hosted web application that embeds Visier's software in less than five minutes configuration. Visier's offerings include an embedded SasS product for enterprise customers. Those customers often found onboarding challenging. Embedding a SasS product into your own has complications surrounding *CORS policies*, cross-site scripting, and authentication (in this case, SAML 2.0). I wrote an application that provided:\n\n1. A live example of embedding Visier's software in **less than five minutes configuration**.\n1. Example code that users could duplicate in their own application.\n1. A live reference of working SAML authentications.\n1. Extensive technical documentation.\n\nThe project is published on [Visier's public GitHub](https://github.com/visier/embedding-exemplar).",
              "neighbours": [
                "embeddedSass",
                "saml",
                "sso",
                "javascript",
                "express",
                "technicalDocumentation"
              ]
            },
            {
              "id": "customSwagger",
              "label": "Develop a unique UI for API documentation",
              "description": "I wrote custom React components for SwaggerUI to create a unique API documentation UI according to a Figma specification provided by the UX team. Although I need some initial help to determine the best approach for customizing SwaggerUI, I showed my *resourceful* and *self-starting* nature by learning React, understanding the SwaggerUI architecture, and implmenting several different designs without significant help.",
              "neighbours": [
                "swaggerUi",
                "openApi",
                "react",
                "resourceful",
                "typescript"
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "academics",
      "label": "Academics",
      "children": [
        {
          "id": "tru",
          "label": "Bachelor of Computing Science",
          "location": "TRU",
          "description": "./markdown/academics-description.md",
          "start": [
            2021,
            3
          ],
          "end": [
            2024,
            1
          ],
          "children": [
            {
              "id": "ai",
              "label": "Applied Artificial Intelligence",
              "grade": "A+",
              "level": 300,
              "neighbours": [
                "ai-skill"
              ]
            },
            {
              "id": "algos",
              "label": "Algorithm Design and Analysis",
              "grade": "A",
              "level": 300,
              "neighbours": [
                "algo-design-analysis"
              ]
            },
            {
              "id": "web-based-info-systems",
              "label": "Web-based Information Systems",
              "grade": "In progress",
              "level": 400
            },
            {
              "id": "os-class",
              "label": "Operating Systems",
              "grade": "A+",
              "level": 300,
              "neighbours": [
                "os-skill"
              ]
            },
            {
              "id": "embedded-class",
              "label": "Embedded/Robotics Programming",
              "grade": "In progress",
              "level": 400
            },
            {
              "id": "distributed-class",
              "label": "Distributed Programming",
              "grade": "In progress",
              "level": 400,
              "neighbours": [
                "network-protocols",
                "distributed-skill"
              ]
            },
            {
              "id": "haskell-classes",
              "label": "Haskell 1 & 2",
              "grade": "5/5"
            },
            {
              "id": "hci",
              "label": "Human Computer Interaction Design",
              "grade": "In progress",
              "level": 300
            },
            {
              "id": "software-eng",
              "label": "Software Engineering",
              "grade": "A-",
              "level": 300
            },
            {
              "id": "software-architecture-class",
              "label": "Software Architecutre and Design",
              "grade": "A+",
              "level": 200,
              "neighbours": [
                "algo-design-analysis"
              ]
            },
            {
              "id": "internet-security",
              "label": "Internet and Security Issues",
              "grade": "A+",
              "level": 300,
              "neighbours": [
                "network-protocols",
                "analyzeRequirements"
              ]
            },
            {
              "id": "databases",
              "label": "Database Systems",
              "grade": "A",
              "level": 300
            },
            {
              "id": "networks",
              "label": "Computer Networks",
              "grade": "A",
              "level": 300,
              "neighbours": [
                "network-protocols"
              ]
            },
            {
              "id": "mobile-app-development",
              "label": "Mobile App Development I",
              "grade": "A+",
              "level": 200
            },
            {
              "id": "discrete",
              "label": "Discrete Mathematics",
              "grade": "A+",
              "level": 100
            },
            {
              "id": "math-for-compsci",
              "label": "Math for Computing Science",
              "grade": "A+",
              "level": 100
            }
          ]
        },
        {
          "id": "ambrose",
          "label": "Ambrose University",
          "start": [
            2013,
            9
          ],
          "end": [
            2016,
            4
          ],
          "description": "This is a description of Ambrose."
        }
      ]
    },
    {
      "id": "projects",
      "label": "Projects"
    },
    {
      "id": "life",
      "label": "Life Experiences"
    },
    {
      "id": "skills",
      "label": "Skills",
      "children": [
        {
          "id": "crossteamCollaboration",
          "label": "Cross-team collaboration"
        },
        {
          "id": "architectureAndDesign",
          "label": "Software architecture and designs"
        },
        {
          "id": "automatedTesting",
          "label": "Perform automated unit, integration, and end-to-end tests"
        },
        {
          "id": "analyzeRequirements",
          "label": "Analyze Security Requirements"
        },
        {
          "id": "codeReview",
          "label": "Recieve and provide meaningful code review"
        },
        {
          "id": "communication",
          "label": "Communicate technical and nontechnical concepts"
        },
        {
          "id": "technicalDocumentation",
          "label": "Technical Documentation"
        },
        {
          "id": "algo-design-analysis",
          "label": "Design & Analyize Algorithms"
        },
        {
          "id": "os-skill",
          "label": "Understand and OS concepts"
        },
        {
          "id": "network-protocols",
          "label": "Use network protocols"
        },
        {
          "id": "distributed-skill",
          "label": "Create distributed applications"
        },
        {
          "id": "ai-skill",
          "label": "Implement simple AI models"
        }
      ]
    },
    {
      "id": "technologies",
      "label": "Technologies",
      "expanded": false,
      "children": [
        {
          "id": "languages",
          "label": "Languages",
          "children": [
            {
              "id": "scala",
              "label": "Scala"
            },
            {
              "id": "haskell",
              "label": "Haskell"
            },
            {
              "id": "typescript",
              "label": "TypeScript"
            },
            {
              "id": "javascript",
              "label": "JavaScript"
            },
            {
              "id": "cpp",
              "label": "C/C++"
            },
            {
              "id": "java",
              "label": "Java"
            },
            {
              "id": "sql",
              "label": "SQL"
            },
            {
              "id": "bash",
              "label": "Bash"
            }
          ]
        },
        {
          "id": "testFrameworks",
          "label": "Test Frameworks",
          "children": [
            {
              "id": "scalaTest",
              "label": "Scala Test"
            }
          ]
        },
        {
          "id": "webFrameworks",
          "label": "Web Frameworks",
          "children": [
            {
              "id": "express",
              "label": "Express"
            },
            {
              "id": "angular",
              "label": "Angular"
            },
            {
              "id": "react",
              "label": "React"
            }
          ]
        },
        {
          "id": "webTechnologies",
          "label": "Web Technologies",
          "children": [
            {
              "id": "restfulApis",
              "label": "RESTful APIs"
            },
            {
              "id": "protobuf",
              "label": "Protobuf"
            },
            {
              "id": "swaggerUi",
              "label": "SwaggerUI"
            },
            {
              "id": "openApi",
              "label": "OpenAPI"
            },
            {
              "id": "http",
              "label": "HTTP(S)"
            },
            {
              "id": "embeddedSass",
              "label": "Embedded SasS Solutions"
            },
            {
              "id": "saml",
              "label": "SAML2"
            },
            {
              "id": "sso",
              "label": "SSO"
            }
          ]
        }
      ]
    },
    {
      "id": "characterTraits",
      "label": "Character Traits",
      "children": [
        {
          "id": "flexibility",
          "label": "Flexibility"
        },
        {
          "id": "leadership",
          "label": "Leadership"
        },
        {
          "id": "resourceful",
          "label": "Resourceful"
        }
      ]
    }
  ]
}